// Generated by view binder compiler. Do not edit!
package com.allsortswebdesigners.qrgeneratorpro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.allsortswebdesigners.qrgeneratorpro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNotificationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView messageText;

  @NonNull
  public final TextView timestampText;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final View typeIndicator;

  private ItemNotificationBinding(@NonNull LinearLayout rootView, @NonNull TextView messageText,
      @NonNull TextView timestampText, @NonNull TextView titleText, @NonNull View typeIndicator) {
    this.rootView = rootView;
    this.messageText = messageText;
    this.timestampText = timestampText;
    this.titleText = titleText;
    this.typeIndicator = typeIndicator;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.messageText;
      TextView messageText = ViewBindings.findChildViewById(rootView, id);
      if (messageText == null) {
        break missingId;
      }

      id = R.id.timestampText;
      TextView timestampText = ViewBindings.findChildViewById(rootView, id);
      if (timestampText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.typeIndicator;
      View typeIndicator = ViewBindings.findChildViewById(rootView, id);
      if (typeIndicator == null) {
        break missingId;
      }

      return new ItemNotificationBinding((LinearLayout) rootView, messageText, timestampText,
          titleText, typeIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
